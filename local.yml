version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  backend: &backend
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_local_django
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:5.0

  celeryworker:
    <<: *backend
    image: backend_local_celeryworker
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *backend
    image: backend_local_celerybeat
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celerybeat

  flower:
    <<: *backend
    image: backend_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
  
  frontend:
    image: node:10-alpine
    command: npm run serve
    volumes:
      - ./frontend:/app
    env_file:
      - ./.envs/.local/.quasar
    working_dir: /app
    restart: on-failure
  
  nginx:
    image: nginx:alpine
    ports:
      - "8001:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/local.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none
